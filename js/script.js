//--------------------------------------------------
// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ DOMContentLoaded
//--------------------------------------------------

// 1) –¢–µ–º–Ω—ã–π —Ä–µ–∂–∏–º
const darkModeToggle = document.getElementById('dark-mode');
const body = document.body;

darkModeToggle.addEventListener('change', () => {
  body.classList.toggle('dark-mode');
  localStorage.setItem(
    'darkMode',
    body.classList.contains('dark-mode') ? 'enabled' : 'disabled'
  );
});

// 2) Fade-in —ç–ª–µ–º–µ–Ω—Ç—ã
const fadeInElements = document.querySelectorAll('.fade-in-start');

// 3) –ì–∞–ª–µ—Ä–µ—è (–æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞ –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω)
const galleryImagesArray = Array.from(document.querySelectorAll('.gallery-image'));
let currentImageIndex = 0;

const openFullscreenGallery = (index) => {
  currentImageIndex = index;

  const fullScreenOverlay = document.createElement('div');
  fullScreenOverlay.classList.add('fullscreen-overlay');
  fullScreenOverlay.innerHTML = `
    <div class="fullscreen-content">
      <img src="${galleryImagesArray[index].src}" alt="${galleryImagesArray[index].alt}">
    </div>`;
  document.body.appendChild(fullScreenOverlay);

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
  fullScreenOverlay.addEventListener('click', (e) => {
    if (!e.target.closest('.fullscreen-content')) {
      fullScreenOverlay.remove();
    }
  });

  // –ü–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  const imageElement = fullScreenOverlay.querySelector('img');
  imageElement.addEventListener('click', (e) => {
    const clickX = e.clientX - imageElement.getBoundingClientRect().left;
    const imageWidth = imageElement.offsetWidth;

    // –ï—Å–ª–∏ –∫–ª–∏–∫ –ª–µ–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ ‚Äî –Ω–∞–∑–∞–¥, –∏–Ω–∞—á–µ ‚Äî –≤–ø–µ—Ä—ë–¥
    if (clickX < imageWidth / 2) {
      currentImageIndex = (currentImageIndex - 1 + galleryImagesArray.length) % galleryImagesArray.length;
    } else {
      currentImageIndex = (currentImageIndex + 1) % galleryImagesArray.length;
    }
    updateFullscreenImage(fullScreenOverlay);
  });
};

const updateFullscreenImage = (overlay) => {
  const imgElement = overlay.querySelector('img');
  imgElement.src = galleryImagesArray[currentImageIndex].src;
  imgElement.alt = galleryImagesArray[currentImageIndex].alt;
};

// –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≥–∞–ª–µ—Ä–µ–µ
galleryImagesArray.forEach((image, index) => {
  image.addEventListener('click', () => openFullscreenGallery(index));
});

// 4) –ü–æ–≥–æ–¥–∞
const weatherInfo = document.getElementById('weather-info');

const fetchWeather = async () => {
  try {
    const response = await fetch('https://api.open-meteo.com/v1/forecast?latitude=43.165&longitude=44.817&current_weather=true');
    const data = await response.json();
    const { temperature, weathercode } = data.current_weather;

    const weatherIcons = {
      1: '‚òÄÔ∏è',  // –°–æ–ª–Ω–µ—á–Ω–æ
      2: 'üå§Ô∏è', // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å
      3: '‚òÅÔ∏è',  // –û–±–ª–∞—á–Ω–æ
      45: 'üå´Ô∏è', // –¢—É–º–∞–Ω
      51: 'üå¶Ô∏è', // –õ—ë–≥–∫–∏–π –¥–æ–∂–¥—å
      61: 'üåßÔ∏è', // –î–æ–∂–¥—å
    };

    const weatherIcon = weatherIcons[weathercode] || '‚ùì';

    weatherInfo.innerHTML = `
      <p>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temperature}¬∞C</p>
      <p>–ü–æ–≥–æ–¥–∞: ${weatherIcon}</p>
    `;
  } catch (error) {
    weatherInfo.innerHTML = '<p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.</p>';
  }
};

// 5) –ü–µ—Ä–µ–≤–æ–¥ (translations)
const langButtons = document.querySelectorAll('.lang-btn'); // –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
const elementsToTranslate = document.querySelectorAll('[data-lang-key]');

const translations = {
  en: {
    title: "Ingushetia Republic",
    news: "News",
    ads: "Advertisements",
    gallery: "Gallery",
    faq: "FAQ",
    contact: "Contact",
    weather: "Weather Forecast",
    temp: "Temperature",
    condition: "Condition",
    "history-title": "History of Ingushetia",
    "history-description": "Ingushetia is one of the oldest regions of the North Caucasus, rich in cultural and historical heritage.",
    "history-fact1": "The towers of Ingushetia are unique architectural monuments built in the Middle Ages.",
    "history-fact2": "The Ingush people are famous for their traditions of hospitality and respect.",
    "history-fact3": "Always. Everywhere. Ingush people."
  },
  ru: {
    title: "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ò–Ω–≥—É—à–µ—Ç–∏—è",
    news: "–ù–æ–≤–æ—Å—Ç–∏",
    ads: "–û–±—ä—è–≤–ª–µ–Ω–∏—è",
    gallery: "–ì–∞–ª–µ—Ä–µ—è",
    faq: "FAQ",
    contact: "–ö–æ–Ω—Ç–∞–∫—Ç—ã",
    weather: "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã",
    temp: "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
    condition: "–ü–æ–≥–æ–¥–∞",
    "history-title": "–ò—Å—Ç–æ—Ä–∏—è –ò–Ω–≥—É—à–µ—Ç–∏–∏",
    "history-description": "–ò–Ω–≥—É—à–µ—Ç–∏—è ‚Äì –æ–¥–∏–Ω –∏–∑ –¥—Ä–µ–≤–Ω–µ–π—à–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –°–µ–≤–µ—Ä–Ω–æ–≥–æ –ö–∞–≤–∫–∞–∑–∞, –±–æ–≥–∞—Ç—ã–π –∫—É–ª—å—Ç—É—Ä–Ω—ã–º –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –Ω–∞—Å–ª–µ–¥–∏–µ–º.",
    "history-fact1": "–ë–∞—à–Ω–∏ –ò–Ω–≥—É—à–µ—Ç–∏–∏ ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–∞–º—è—Ç–Ω–∏–∫–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ –°—Ä–µ–¥–Ω–∏–µ –≤–µ–∫–∞.",
    "history-fact2": "–ò–Ω–≥—É—à—Å–∫–∏–π –Ω–∞—Ä–æ–¥ —Å–ª–∞–≤–∏—Ç—Å—è —Å–≤–æ–∏–º–∏ —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏ –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º—Å—Ç–≤–∞ –∏ —É–≤–∞–∂–µ–Ω–∏—è.",
    "history-fact3": "–í—Å–µ–≥–¥–∞. –í–µ–∑–¥–µ. –ò–Ω–≥—É—à–∏."
  }
};

const translatePage = (lang) => {
  elementsToTranslate.forEach((element) => {
    const key = element.getAttribute('data-lang-key');
    element.textContent = translations[lang][key];
  });
};

//--------------------------------------------------
// –û–î–ò–ù –æ–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ DOMContentLoaded
//--------------------------------------------------
document.addEventListener('DOMContentLoaded', () => {
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ darkMode
  const savedMode = localStorage.getItem('darkMode');
  if (savedMode === 'enabled') {
    body.classList.add('dark-mode');
    darkModeToggle.checked = true;
  }

  // 2. –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é fadeIn –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏
  setTimeout(() => {
    fadeInElements.forEach(el => {
      el.style.opacity = '1';
      el.style.transform = 'translateY(0)';
    });
  }, 500);

  // 3. –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º —è–∑—ã–∫ (—á–∏—Ç–∞–µ–º –∏–∑ localStorage)
  const savedLang = localStorage.getItem('selectedLang') || 'ru';
  translatePage(savedLang);

  langButtons.forEach((btn) => {
    btn.addEventListener('click', () => {
      const selectedLang = btn.getAttribute('data-lang');
      localStorage.setItem('selectedLang', selectedLang);
      translatePage(selectedLang);
    });
  });

  // 4. –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –ø–æ–≥–æ–¥—É –∏ AOS
  fetchWeather();
  AOS.init({
    duration: 800,
    once: true
  });

  // 5. –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö"
  const scrollTopBtn = document.getElementById('scroll-to-top');
  window.addEventListener('scroll', () => {
    if (window.pageYOffset > 300) {
      scrollTopBtn.style.display = 'block';
      scrollTopBtn.style.opacity = '1';
    } else {
      scrollTopBtn.style.opacity = '0';
      setTimeout(() => {
        if (window.pageYOffset <= 300) {
          scrollTopBtn.style.display = 'none';
        }
      }, 300);
    }
  });
  scrollTopBtn.addEventListener('click', () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  });

  // 6. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏
  const filterButtons = document.querySelectorAll('.gallery-filters button');
  const galleryImages = document.querySelectorAll('.gallery-image');
  filterButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const filter = btn.getAttribute('data-filter');
      galleryImages.forEach(img => {
        if (filter === 'all' || img.getAttribute('data-category') === filter) {
          img.style.display = '';
        } else {
          img.style.display = 'none';
        }
      });
    });
  });

  // 7. –ì–∞–º–±—É—Ä–≥–µ—Ä-–º–µ–Ω—é
  const menuToggle = document.querySelector('.menu-toggle');
  const menuContainer = document.querySelector('.menu-container');
  menuToggle.addEventListener('click', () => {
    menuContainer.classList.toggle('open');
  });
});
